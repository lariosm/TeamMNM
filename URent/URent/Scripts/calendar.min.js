var unavailableDateObjects, unavailableDates = []; $(function () { $("#dob").datepicker({ dateFormat: "mm/dd/yy", changeMonth: !0, changeYear: !0, minDate: "-100Y", maxDate: "-18Y", yearRange: "-100:-18" }) }), $(document).ready(function () { $("#StartRequest").datepicker({ dateFormat: "mm/dd/yy", changeMonth: !0, changeYear: !0, minDate: "0D", maxDate: "3Y" }), $("#EndRequest").datepicker({ dateFormat: "mm/dd/yy", changeMonth: !0, changeYear: !0, minDate: "0D", maxDate: "3Y" }) }); var dateRange = []; function transactionHistory() { var e = $("#itemId").data("id"), a = "/SUPTransactions/ExcludeTransactionDates/" + parseInt(e); $.ajax({ type: "GET", dataType: "json", url: a, success: showPreviousTransactions, error: ajaxError }) } function showPreviousTransactions(e) { var a, t, n, r = [], i = []; if (e.length > 0) { for (var o = 0; o < e.length; o++)n = JSON.stringify(e[o]).split(","), r.push(n[0]), r.push(n[1]); for (var c = 0; c < r.length; c++)i.push(new Date(parseInt(r[c].replace(/\D/g, "")))); for (o = 0; o < i.length; o += 2)for (a = i[o], t = i[o + 1], n = new Date(a); n <= t;)unavailableDates.push(n.getMonth() + 1 + "/" + n.getDate() + "/" + n.getFullYear()), n.setDate(n.getDate() + 1) } unavailableDateObjects = convertDisabledFieldToDateObject(unavailableDates) } function ajaxError() { console.error("ERROR: Unable to resolve transaction dates on calendar") } function main() { transactionHistory() } function unavailable(e) { return dmy = e.getMonth() + 1 + "/" + e.getDate() + "/" + e.getFullYear(), -1 == $.inArray(dmy, unavailableDates) ? [!0, ""] : [!1, "", "Unavailable"] } function customRange(e) { return { minDate: "EndDate" == e.id ? $("#StartDate").datepicker("getDate") : new Date } } function customRangeStart(e) { return { maxDate: "StartDate" == e.id ? $("#EndDate").datepicker("getDate") : null } } function convertDisabledFieldToDateObject(e) { var a = []; return $.each(e, function (e, t) { var n = $.datepicker.parseDate("mm/dd/yy", t); a.push(n) }), a.sort(function (e, a) { return e - a }), a } function triggerOnStartSelect() { var e = new Date($("#StartDate").datepicker("getDate")), a = (new Date($("#EndDate").datepicker("getDate")), null); $.each(unavailableDateObjects, function (t, n) { if (e < n) return (a = new Date(n)).setDate(a.getDate() - 1), !1 }), $("#EndDate").datepicker("option", "maxDate", a) } $("#z").datepicker({ minDate: "0", dateFormat: "mm/dd/yy", inline: !0, altField: "#d", beforeShowDay: function (e) { var a = jQuery.datepicker.formatDate("mm/dd/yy", e); return [-1 == dateRange.indexOf(a)] } }), $("#d").change(function () { $("#z").datepicker("option", $(this).val()) }), $(document).ready(main()), $(document).ready(function () { $("#StartDate").datepicker({ beforeShow: customRangeStart, beforeShowDay: unavailable, minDate: 0, dateFormat: "mm/dd/yy", changeYear: !0, onSelect: function () { $("#EndDate").removeAttr("disabled"), triggerOnStartSelect(); var e = $("#StartDate").datepicker("getDate"); null != e && (e.setDate(e.getDate() + 1), $("#EndDate").datepicker("option", "minDate", e), totalDays()) } }), $("#EndDate").datepicker({ beforeShow: customRange, beforeShowDay: unavailable, dateFormat: "mm/dd/yy", changeYear: !0, onSelect: function () { null != $("#StartDate").datepicker("getDate") && ($("#StartDate").datepicker("option", "minDate"), totalDays()) } }) });