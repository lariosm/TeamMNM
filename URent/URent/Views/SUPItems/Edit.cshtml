@model URent.Models.SUPItem

@{
    ViewBag.Title = "Revise your listing";
    Layout = "~/Views/Shared/_UserPageLayout.cshtml";
    @Styles.Render("~/Scripts/dropzone/dropzone.min.css")
}

<h2>Revise your listing</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control",
                @placeholder = "Enter product name (i.e. Apple iPad Pro 3rd gen)" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 10,
                @placeholder = "Describe the item you're renting out and provide complete and accurate details."} )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Photos", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!--Drop Zone Stuff-->
                <div action="~/SUPItems/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
                    <div class="fallback">
                        @*<input name="file" type="file" multiple />
                            <input type="submit" value="Upload" />*@
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAvailable)
                    @Html.LabelFor(model => model.IsAvailable, "This item is available for rent.")
                    @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DailyPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="input-group-prepend">
                    <div class="input-group-text">$</div>
                    @Html.TextBoxFor(model => model.DailyPrice, new { @class = "form-control form-inline",
                        @placeholder = "i.e. 12.49", @type = "number", @min = "0.01", @step = "0.01" })
                    @Html.ValidationMessageFor(model => model.DailyPrice, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- Place for Image stuff -->
        <input hidden="hidden" id="PhotoElement" name="photoElementID" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "Details", new { id = Model.Id }, new { @class = "btn btn-outline-primary" })
                @Html.ActionLink("Delete listing", "Delete", new { id = Model.Id }, new { @class = "btn btn-outline-danger" })
            </div>
        </div>
    </div>
}

<script>
    //File Upload response from the server
    Dropzone.options.dropzoneForm = {
        init: function () {
            this.on("complete", function (data) {
                //var res = eval('(' + data.xhr.responseText + ')');
                var res = JSON.parse(data.xhr.responseText);
                console.info(res);
                $("#PhotoElement").val(res.value);
            });
        }
    };
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/dropzone/dropzone.min.js")
}
