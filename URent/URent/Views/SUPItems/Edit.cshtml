@model URent.Models.SUPItem

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_UserPageLayout.cshtml";
}

<h2>Edit your listing</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control",
            @placeholder = "Enter product name (i.e. Apple iPad Pro 3rd gen)" } })
            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 10,
            @placeholder = "Describe the item you're renting out and provide complete and accurate details."} )
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    @* <div class="form-group">
            @Html.LabelFor(model => model.TimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeStamp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeStamp, "", new { @class = "text-danger" })
            </div>
        </div> *@

    <div class="form-group">
        @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAvailable)
                @Html.LabelFor(model => model.IsAvailable, "This item is available for rent.")
                @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DailyPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            <div class="input-group-prepend">
                <div class="input-group-text">$</div>
                @Html.EditorFor(model => model.DailyPrice, new { htmlAttributes = new { @class = "form-control form-inline",
                @placeholder = "i.e. 12.49" } })
                @Html.ValidationMessageFor(model => model.DailyPrice, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Details", new { id = Model.Id }, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
